# Sample localsettings.py. Copy it to localsettings.py and fill it
# with settings relevant to your local server.

import os
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
TEMPLATE_DEBUG = DEBUG

ALLOWED_HOSTS = []

ADMINS = (
    # ('Your Name', 'your_email@domain.com'),
)
MANAGERS = ADMINS

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


import ldap
from django_auth_ldap.config import LDAPSearch


AUTH_LDAP_SERVER_URI = ''
AUTH_LDAP_BIND_DN = 'cn=username,ou=whatever,dc=school,dc=edu'
AUTH_LDAP_BIND_PASSWORD = 'yourpassword'
AUTH_LDAP_USER_SEARCH = LDAPSearch("ou=Lalala,dc=school,dc=edu", ldap.SCOPE_SUBTREE, "(cn=%(user)s)")


# configure attributes via AUTH_LDAP_USER_ATTR_MAP


# SECURITY WARNING: keep the secret key used in production secret!
# Generate a new key here: http://www.miniwebtool.com/django-secret-key-generator/
SECRET_KEY = ''

# Information needed for generating new ARKs and PURLs:
#  - base url for all pids (where the pid resolver is installed)
#  - name authority number for ARKs
PID_RESOLVER_URL = 'http://pid.example.com'
PID_ARK_NAAN = '12345'

# django-linkcheck settings for internal links; for more options, see
# https://github.com/DjangoAdminHackers/django-linkcheck#settings
SITE_DOMAIN = 'localhost'
# LINKCHECK_SITE_DOMAINS = ['example.com']


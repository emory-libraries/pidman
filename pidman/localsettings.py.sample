# Sample localsettings.py. Copy it to localsettings.py and fill it
# with settings relevant to your local server.

import os
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
TEMPLATE_DEBUG = DEBUG

ALLOWED_HOSTS = []

ADMINS = (
    # ('Your Name', 'your_email@domain.com'),
)
MANAGERS = ADMINS

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    },
    # old postgres db with data to migrate using datamigrate
    # 'old-db': {
    #     'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #     'NAME': '',
    #     'USER': '',
    #     'PASSWORD': '',
    #     'HOST': '',
    #     'PORT': '',
    # }
}

# SECURITY WARNING: keep the secret key used in production secret!
# You can generate a new key here: http://www.miniwebtool.com/django-secret-key-generator/
SECRET_KEY = ''

# cache configuration https://docs.djangoproject.com/en/1.9/topics/cache/
# CACHES = {
#     'default': {
#         # file-based cache
#         'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
#         'LOCATION': '/path/to/cache',
#         # memory cache
#         # 'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
#         # 'LOCATION': 'pidman-cache',
#     }
# }


# django-auth-ldap settings for LDAP login
try:
    import ldap
    from django_auth_ldap.config import LDAPSearch

    AUTH_LDAP_SERVER_URI = 'ldaps://ldap.co'
    AUTH_LDAP_BIND_DN = ''     # DN of the  base LDAP user (e.g., 'uid=foo,ou=bar,o=emory.edu')
    AUTH_LDAP_BIND_PASSWORD = ''           # password for that user
    AUTH_LDAP_USER_SEARCH = LDAPSearch("o=...", ldap.SCOPE_SUBTREE, "(uid=%(user)s)")
    # If a cert file needs to be specified, or any other ldap options
    # from http://python-ldap.org/doc/html/ldap.html#options are needed,
    # add them here:
    # AUTH_LDAP_GLOBAL_OPTIONS = {
    #     ldap.OPT_X_TLS_CACERTFILE: '...',
    # }

    AUTH_LDAP_USER_ATTR_MAP = {
        'first_name': 'givenName',
        'last_name': 'sn',
        'email': 'mail',
        # 'phone': 'telephoneNumber',
        # 'dept_num': 'departmentNumber',
        # 'full_name': 'cn',
        # 'title': 'title',
    }
except ImportError:
    import sys
    print >> sys.stderr, 'Import ldap or django_auth_ldap failed;' + \
        ' skipping LDAP configuration.  LDAP login will be disabled.'


# Information needed for generating new ARKs and PURLs:
#  - base url for all pids (where the pid resolver is installed)
#  - name authority number for ARKs
PID_RESOLVER_URL = 'http://pid.example.com'
PID_ARK_NAAN = '12345'

# django-linkcheck settings for internal links; for more options, see
# https://github.com/DjangoAdminHackers/django-linkcheck#settings
SITE_DOMAIN = 'localhost'
# LINKCHECK_SITE_DOMAINS = ['example.com']




# Sample localsettings.py. Copy it to localsettings.py and fill it
# with settings relevant to your local server.

import os
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
TEMPLATE_DEBUG = DEBUG

ALLOWED_HOSTS = []

ADMINS = (
    # ('Your Name', 'your_email@domain.com'),
)
MANAGERS = ADMINS

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# LDAP login settings.
AUTH_LDAP_SERVER = 'ldaps://ldap.example.com'
AUTH_LDAP_BASE_USER = ''           # DN of the base LDAP user (e.g., 'uid=foo,ou=bar,o=emory.edu')
AUTH_LDAP_BASE_PASS = ''           # password for that user
AUTH_LDAP_SEARCH_SUFFIX = ''
AUTH_LDAP_SEARCH_FILTER = '(uid=%s)'
AUTH_LDAP_CHECK_SERVER_CERT = True # set to False to skip server cert verification (TESTING ONLY)
AUTH_LDAP_CA_CERT_PATH = ''        # full path to CA cert bundle

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''

# Information needed for generating new ARKs and PURLs:
#  - base url for all pids (where the pid resolver is installed)
#  - name authority number for ARKs
PID_RESOLVER_URL = 'http://pid.example.com'
PID_ARK_NAAN = '12345'

# django-linkcheck settings for internal links; for more options, see
# https://github.com/DjangoAdminHackers/django-linkcheck#settings
SITE_DOMAIN = ['localhost']
# LINKCHECK_SITE_DOMAINS = ['example.com']

